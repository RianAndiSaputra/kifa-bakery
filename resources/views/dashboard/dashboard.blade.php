@extends('layouts.app')

@section('title', 'Dashboard')

@section('content')
<!-- Outlet Info -->
<div class="mb-6">
    <div class="bg-white rounded-lg p-4 card-shadow flex items-center justify-between">
        <!-- Left side - Outlet info with icon -->
        <div class="flex items-center space-x-4">
            <!-- Store icon -->
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-store">
                <path d="m2 7 4.41-4.41A2 2 0 0 1 7.83 2h8.34a2 2 0 0 1 1.42.59L22 7"/>
                <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"/>
                <path d="M15 22v-4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4"/>
                <path d="M2 7h20"/>
                <path d="M22 7v3a2 2 0 0 1-2 2v0a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 16 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 12 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 8 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 4 12v0a2 2 0 0 1-2-2V7"/>
            </svg>
            
            <div>
                <h2 class="text-lg font-semibold text-gray-800">Kifa Bakery Pusat</h2>
                <p class="text-sm text-gray-600 mt-1">Data yang ditampilkan adalah untuk outlet Kifa Bakery Pusat.</p>
            </div>
        </div>
        
        <!-- Right side - Date range picker -->
        <div class="relative">
            <button id="dateRangeButton" class="flex items-center space-x-2 bg-gray-50 hover:bg-gray-100 px-3 py-2 rounded-lg transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar-days">
                    <path d="M8 2v4"/>
                    <path d="M16 2v4"/>
                    <rect width="18" height="18" x="3" y="4" rx="2"/>
                    <path d="M3 10h18"/>
                    <path d="M8 14h.01"/>
                    <path d="M12 14h.01"/>
                    <path d="M16 14h.01"/>
                    <path d="M8 18h.01"/>
                    <path d="M12 18h.01"/>
                    <path d="M16 18h.01"/>
                </svg>
                <span id="dateRangeDisplay" class="text-sm font-medium text-gray-800">10 Mei 2024 - 17 Mei 2024</span>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-down">
                    <path d="m6 9 6 6 6-6"/>
                </svg>
            </button>
            
            <!-- Date picker dropdown -->
            <div id="datePickerDropdown" class="hidden absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-lg border border-gray-200 z-10 p-4">
                <div class="flex justify-between items-center mb-4">
                    <button id="prevMonth" class="p-1 rounded-full hover:bg-gray-100">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-left">
                            <path d="m15 18-6-6 6-6"/>
                        </svg>
                    </button>
                    <h3 id="currentMonthYear" class="font-medium">Mei 2024</h3>
                    <button id="nextMonth" class="p-1 rounded-full hover:bg-gray-100">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right">
                            <path d="m9 18 6-6-6-6"/>
                        </svg>
                    </button>
                </div>
                
                <div class="grid grid-cols-7 gap-1 text-center text-xs font-medium text-gray-500 mb-2">
                    <div>M</div>
                    <div>S</div>
                    <div>S</div>
                    <div>R</div>
                    <div>K</div>
                    <div>J</div>
                    <div>S</div>
                </div>
                
                <div id="calendarDays" class="grid grid-cols-7 gap-1 text-sm">
                    <!-- Calendar days will be generated by JavaScript -->
                </div>
                
                <div class="flex justify-between mt-4 pt-4 border-t border-gray-200">
                    <button id="cancelDateRange" class="px-3 py-1 text-sm text-gray-600 hover:bg-gray-100 rounded">Batal</button>
                    <button id="applyDateRange" class="px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700">Terapkan</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Stats Cards -->
<div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
    <!-- Total Penjualan -->
    <div class="bg-white rounded-lg p-4 card-shadow">
        <div class="flex justify-between items-start">
            <div>
                <p class="text-sm text-gray-500">Total Penjualan</p>
                <p class="text-xl font-bold">Rp 167.500</p>
            </div>
            <div class="bg-orange-100 p-2 rounded-lg">
                <i data-lucide="shopping-bag" class="w-5 h-5 text-orange-500"></i>
            </div>
        </div>
    </div>
    
    <!-- Transaksi -->
    <div class="bg-white rounded-lg p-4 card-shadow">
        <div class="flex justify-between items-start">
            <div>
                <p class="text-sm text-gray-500">Transaksi</p>
                <p class="text-xl font-bold">5</p>
            </div>
            <div class="bg-blue-100 p-2 rounded-lg">
                <i data-lucide="credit-card" class="w-5 h-5 text-blue-500"></i>
            </div>
        </div>
    </div>
    
    <!-- Total Item Terjual -->
    <div class="bg-white rounded-lg p-4 card-shadow">
        <div class="flex justify-between items-start">
            <div>
                <p class="text-sm text-gray-500">Total Item Terjual</p>
                <p class="text-xl font-bold">20 Item</p>
            </div>
            <div class="bg-green-100 p-2 rounded-lg">
                <i data-lucide="package" class="w-5 h-5 text-green-500"></i>
            </div>
        </div>
    </div>
    
    <!-- Total Kas Kasir -->
    <div class="bg-white rounded-lg p-4 card-shadow">
        <div class="flex justify-between items-start">
            <div>
                <p class="text-sm text-gray-500">Total Kas Kasir</p>
                <p class="text-xl font-bold">Rp 167.500</p>
            </div>
            <div class="bg-purple-100 p-2 rounded-lg">
                <i data-lucide="dollar-sign" class="w-5 h-5 text-purple-500"></i>
            </div>
        </div>
    </div>
</div>

<!-- Two Columns -->
<div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
    <!-- Left Column -->
    <div class="lg:col-span-2">
    <!-- Overview with Bar Chart -->
    <div class="bg-white rounded-lg p-4 card-shadow mb-6">
        <h3 class="font-semibold text-gray-800 mb-4">Overview</h3>
        <p class="text-sm text-gray-600 mb-2">Data penjualan untuk Kifa Bakery Pusat</p>
        <p class="text-xl font-bold text-orange-500 mb-4">Rp 160k</p>
        
        <!-- Bar Chart Container -->
        <div class="relative h-64">
            <canvas id="salesChart"></canvas>
        </div>
    </div>
</div>
    
    <!-- Right Column -->
    <div class="lg:col-span-1">
        <!-- Penjualan Terlaris -->
        <div class="bg-white rounded-lg p-4 card-shadow">
            <h3 class="font-semibold text-gray-800 mb-4">Penjualan Terlaris</h3>
            <p class="text-sm text-gray-600 mb-2">5 produk terlaris</p>
            
            <div class="space-y-3">
                <!-- Product 1 -->
                <div class="flex justify-between items-center">
                    <div>
                        <p class="font-medium">Roti Unyil</p>
                        <p class="text-sm text-gray-500">Qty: 5</p>
                    </div>
                    <p class="font-bold text-orange-500">Rp 10.000</p>
                </div>
                
                <!-- Product 2 -->
                <div class="flex justify-between items-center">
                    <div>
                        <p class="font-medium">Roti Tawar Original</p>
                        <p class="text-sm text-gray-500">Qty: 4</p>
                    </div>
                    <p class="font-bold text-orange-500">Rp 26.000</p>
                </div>
                
                <!-- Product 3 -->
                <div class="flex justify-between items-center">
                    <div>
                        <p class="font-medium">Bolu Gulung Pandan Ekonomis</p>
                        <p class="text-sm text-gray-500">Qty: 3</p>
                    </div>
                    <p class="font-bold text-orange-500">Rp 45.000</p>
                </div>
                
                <!-- Product 4 -->
                <div class="flex justify-between items-center">
                    <div>
                        <p class="font-medium">Bolu Gulung Coklat Ekonomis</p>
                        <p class="text-sm text-gray-500">Qty: 2</p>
                    </div>
                    <p class="font-bold text-orange-500">Rp 30.000</p>
                </div>
                
                <!-- Product 5 -->
                <div class="flex justify-between items-center">
                    <div>
                        <p class="font-medium">Bolu Gulung Tiramisu Ekonomis</p>
                        <p class="text-sm text-gray-500">Qty: 6</p>
                    </div>
                    <p class="font-bold text-orange-500">Rp 30.000</p>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Get the canvas element
        const ctx = document.getElementById('salesChart').getContext('2d');
        
        // Create the bar chart
        const salesChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu', 'Minggu'],
                datasets: [{
                    label: 'Penjualan (Rp)',
                    data: [120, 140, 160, 130, 180, 200, 220], // Example weekly data
                    backgroundColor: 'rgba(249, 115, 22, 0.7)', // Orange color with transparency
                    borderColor: 'rgba(249, 115, 22, 1)', // Solid orange for border
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return 'Rp ' + value + 'k';
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return 'Rp ' + context.raw + 'k';
                            }
                        }
                    }
                }
            }
        });
    });

  // Date Range Picker Functionality
    document.addEventListener('DOMContentLoaded', function() {
        const dateRangeButton = document.getElementById('dateRangeButton');
        const datePickerDropdown = document.getElementById('datePickerDropdown');
        const currentMonthYear = document.getElementById('currentMonthYear');
        const calendarDays = document.getElementById('calendarDays');
        const prevMonth = document.getElementById('prevMonth');
        const nextMonth = document.getElementById('nextMonth');
        const dateRangeDisplay = document.getElementById('dateRangeDisplay');
        const cancelDateRange = document.getElementById('cancelDateRange');
        const applyDateRange = document.getElementById('applyDateRange');
        
        let currentDate = new Date();
        let startDate = null;
        let endDate = null;
        
        // Toggle dropdown
        dateRangeButton.addEventListener('click', function() {
            datePickerDropdown.classList.toggle('hidden');
            if (!datePickerDropdown.classList.contains('hidden')) {
                renderCalendar(currentDate);
            }
        });
        
        // Navigation between months
        prevMonth.addEventListener('click', function() {
            currentDate.setMonth(currentDate.getMonth() - 1);
            renderCalendar(currentDate);
        });
        
        nextMonth.addEventListener('click', function() {
            currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar(currentDate);
        });
        
        // Render calendar
        function renderCalendar(date) {
            const year = date.getFullYear();
            const month = date.getMonth();
            
            currentMonthYear.textContent = new Intl.DateTimeFormat('id-ID', { 
                month: 'long', 
                year: 'numeric' 
            }).format(date);
            
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const daysInMonth = lastDay.getDate();
            const startingDay = firstDay.getDay();
            
            calendarDays.innerHTML = '';
            
            // Previous month's days
            const prevMonthLastDay = new Date(year, month, 0).getDate();
            for (let i = 0; i < startingDay; i++) {
                const day = document.createElement('div');
                day.className = 'text-gray-400 p-1';
                day.textContent = prevMonthLastDay - startingDay + i + 1;
                calendarDays.appendChild(day);
            }
            
            // Current month's days
            for (let i = 1; i <= daysInMonth; i++) {
                const day = document.createElement('div');
                day.className = 'p-1 rounded-full cursor-pointer hover:bg-gray-100';
                day.textContent = i;
                
                const currentDay = new Date(year, month, i);
                
                // Highlight selected range
                if (startDate && endDate && currentDay >= startDate && currentDay <= endDate) {
                    day.className += ' bg-blue-100 text-blue-600';
                } else if (startDate && !endDate && currentDay.getTime() === startDate.getTime()) {
                    day.className += ' bg-blue-600 text-white';
                }
                
                day.addEventListener('click', function() {
                    selectDate(currentDay);
                });
                
                calendarDays.appendChild(day);
            }
            
            // Next month's days
            const totalCells = startingDay + daysInMonth;
            const remainingCells = 42 - totalCells; // 6 weeks
            for (let i = 1; i <= remainingCells; i++) {
                const day = document.createElement('div');
                day.className = 'text-gray-400 p-1';
                day.textContent = i;
                calendarDays.appendChild(day);
            }
        }
        
        // Select date range
        function selectDate(date) {
            if (!startDate || (startDate && endDate)) {
                startDate = date;
                endDate = null;
            } else if (date > startDate) {
                endDate = date;
            } else {
                endDate = startDate;
                startDate = date;
            }
            
            renderCalendar(currentDate);
            
            if (startDate && endDate) {
                dateRangeDisplay.textContent = 
                    `${startDate.getDate()} ${formatMonth(startDate.getMonth())} ${startDate.getFullYear()} - ` +
                    `${endDate.getDate()} ${formatMonth(endDate.getMonth())} ${endDate.getFullYear()}`;
            }
        }
        
        // Format month name
        function formatMonth(month) {
            const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 
                            'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];
            return months[month];
        }
        
        // Apply date range
        applyDateRange.addEventListener('click', function() {
            datePickerDropdown.classList.add('hidden');
            // Here you would typically refresh data based on the selected range
        });
        
        // Cancel selection
        cancelDateRange.addEventListener('click', function() {
            datePickerDropdown.classList.add('hidden');
        });
        
        // Initialize with default range (today to +7 days)
        const today = new Date();
        const nextWeek = new Date();
        nextWeek.setDate(today.getDate() + 7);
        
        startDate = today;
        endDate = nextWeek;
        
        dateRangeDisplay.textContent = 
            `${today.getDate()} ${formatMonth(today.getMonth())} ${today.getFullYear()} - ` +
            `${nextWeek.getDate()} ${formatMonth(nextWeek.getMonth())} ${nextWeek.getFullYear()}`;
    });  
</script>
@endsection